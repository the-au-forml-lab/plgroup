name: Vote open

on:
  schedule:
    - cron: '0 14  *  *  3'
  workflow_dispatch:
    branches: [ main, dev ]

env:
  USERNAME: "PL Reading Group Paper Vote"
  AVATAR: https://raw.githubusercontent.com/the-au-forml-lab/plgroup/main/.github/assets/vote.png
  COLORS: ("" "26367" "16750848" "65433" "10027263" "2609060" "2605775" "13579303" "13593639")

jobs:
  choices:
    runs-on: ubuntu-latest
    if: ${{ vars.PAPER_VOTE_ON == 1 }}
    outputs:
      choices: ${{ steps.choices.outputs.choices }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 24
      - name: Choose papers randomly
        id: choices
        run: |
          npm run choose -- ${{ vars.OPTIONS }}
          # I expect this to write `data/choices.json` all on one line
          # dont' forget to update the npm run script
          echo choices="$(< data/choices.json)" >> $GITHUB_OUTPUT

  announce_options:
    needs: selections
    runs-on: ubuntu-latest
    # Sequentially generate suggestions, if paper vote is enabled
    strategy:
      matrix:
        options: ${{ fromJSON(needs.choices.ouputs.choices) }}
      max-parallel: 1
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 24
      - name: set variables
        id: vars
        run: |
          #array=${{ env.COLORS }}
          #echo "color=${array[${{ matrix.options }}]}" >> $GITHUB_OUTPUT
          npm run set -- ${{ matrix.options }}
          SHA=$(echo ${{ matrix.options }} | sha256sum | head -c6)
          echo "color=$SHA" >> $GITHUB_OUTPUT
          echo "suffix=$SHA" >> $GITHUB_OUTPUT
          cat data/vars.txt >> $GITHUB_OUTPUT
      - name: Create a pull request
        uses: peter-evans/create-pull-request@v6
        id: pr
        with:
          labels: paper-vote,next-paper
          branch: paper-vote-${{ steps.vars.outputs.suffix }}
          title: ${{ fromJSON(steps.vars.outputs.title) }}
          body: ${{ fromJSON(steps.vars.outputs.body) }}
          delete-branch: true
      - name: Post vote option to Discord
        uses: Ilshidur/action-discord@master
        if: ${{ env.DISCORD_WEBHOOK != '' }}
        env:
          DISCORD_AVATAR: ${{ env.AVATAR }}
          DISCORD_USERNAME: ${{ env.USERNAME }}
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
          DISCORD_EMBEDS: |-
            [{ "color": "${{ steps.vars.outputs.color }}",
               "title": ${{ toJSON(format('Option {0}: {1}',
                                   matrix.options,
                                   fromJSON(steps.vars.outputs.title))) }},
               "url": "${{ fromJSON(steps.vars.outputs.doi) }}",
               "description" : ${{
                             toJSON(format('{0}

                                           [Merge PR {1}]({2})',
                                           fromJSON(steps.vars.outputs.citation),
                                           steps.pr.outputs.pull-request-number,
                                           steps.pr.outputs.pull-request-url)) }}
            }]

  post_actions:
    needs: announce_options
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          VT=$(cat .github/assets/voting.md | jq --raw-input --slurp)
          echo "VOTING=${VT/:OPTION_COUNT:/${{ vars.OPTION_COUNT }}}" >> $GITHUB_ENV
      - uses: Ilshidur/action-discord@master
        env:
          DISCORD_AVATAR: ${{ env.AVATAR }}
          DISCORD_USERNAME: ${{ env.USERNAME }}
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: ${{ fromJSON(env.VOTING) }}
